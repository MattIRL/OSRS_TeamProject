@model OSRS_TeamProject.Models.InventoryItem

@{
    ViewData["Title"] = "Edit Item";
}

@section Styles {
    <!-- Silkscreen font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">
    <!-- Matt theme -->
    <link rel="stylesheet" href="~/css/matt.css" asp-append-version="true" />
}

<div class="text-light rsfont center-container">
    <div class="container-fluid">
        <h1 style="color: #FF981F; text-shadow: 2px 2px 2px black;">@ViewData["Title"]</h1>
    <hr />

    <div class="text-dark p-sm-2" style="background: #D9D9D9; border-radius: 5px;">
        <div class="row g-3 align-items-center mb-3">
            <div class="col-auto">
                @{
                    var icon = string.IsNullOrWhiteSpace(Model.IconUrl)
                    ? Url.Content("~/img/placeholder-item.svg")
                    : $"https://secure.runescape.com/m=itemdb_oldschool/1761128977838_obj_big.gif?id={Model.ItemId}"!;
                }
                <img src="@icon" alt="icon" width="96" height="96"
                     style="object-fit:contain;border-radius:5px;padding:4px;border:2px solid #494034; " />
            </div>
            <div class="col d-flex justify-content-between align-items-center">
                <h2 class="h4 m-0">@Model.Name</h2>
                <div class="h5">@Model.Quantity <span class="text-muted me-sm-2">in inventory</span></div>
            </div>
        </div>

    <div class="row">
        <div class="col-md-7">
            <form asp-action="Edit" method="post" autocomplete="off">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                <input type="hidden" asp-for="ItemId" />

                <!-- Name -->
                <div class="mb-3">
                    <label asp-for="Name" class="form-label">Item Name <span class="text-danger">*</span></label>
                    <input asp-for="Name" class="form-control" placeholder="Item name" aria-describedby="nameHelp" />
                    <small id="nameHelp" class="form-text text-muted">2–80 characters.</small>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <!-- Quantity -->
                <div class="mb-3">
                    <label asp-for="Quantity" class="form-label">Quantity <span class="text-danger">*</span></label>
                    <input asp-for="Quantity" class="form-control" type="number" min="0" placeholder="0" aria-describedby="qtyHelp" />
                    <small id="qtyHelp" class="form-text text-muted">Must be 0 or more.</small>
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>

                <!-- Description -->
                <div class="mb-3">
                    <label asp-for="Description" class="form-label">Description</label>
                    <textarea asp-for="Description" class="form-control" rows="3" placeholder="Short description (≤ 300 chars)"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <!-- Notes -->
                <div class="mb-4">
                    <label asp-for="Notes" class="form-label">Notes</label>
                    <textarea asp-for="Notes" class="form-control" rows="2" placeholder="Your notes (≤ 300 chars)"></textarea>
                    <span asp-validation-for="Notes" class="text-danger"></span>
                </div>

                <div>
                    <button type="submit" class="btn yellow-btn btn-shadow">Save</button>
                    <a asp-action="Index" class="btn btn-secondary ms-2 btn-shadow">Cancel</a>
                </div>
            </form>
        </div>
    </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Live icon preview when IconUrl changes
        const iconInput = document.getElementById('IconUrl');
        const iconImg   = document.getElementById('iconPreview');
        const placeholderIcon = '@Url.Content("~/img/placeholder-item.svg")';

        function refreshIconPreview() {
          if (!iconImg) return;
          iconImg.src = (iconInput && iconInput.value) ? iconInput.value : (iconImg.src || placeholderIcon);
        }
        if (iconInput) {
          iconInput.addEventListener('input', refreshIconPreview);
        }
    </script>
}
